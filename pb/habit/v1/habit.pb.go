// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: habit/v1/habit.proto

package habitv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimeUnit int32

const (
	TimeUnit_TIME_UNIT_UNSPECIFIED TimeUnit = 0
	TimeUnit_MINUTES               TimeUnit = 1
	TimeUnit_HOURS                 TimeUnit = 2
	TimeUnit_DAYS                  TimeUnit = 3
	TimeUnit_WEEKS                 TimeUnit = 4
)

// Enum value maps for TimeUnit.
var (
	TimeUnit_name = map[int32]string{
		0: "TIME_UNIT_UNSPECIFIED",
		1: "MINUTES",
		2: "HOURS",
		3: "DAYS",
		4: "WEEKS",
	}
	TimeUnit_value = map[string]int32{
		"TIME_UNIT_UNSPECIFIED": 0,
		"MINUTES":               1,
		"HOURS":                 2,
		"DAYS":                  3,
		"WEEKS":                 4,
	}
)

func (x TimeUnit) Enum() *TimeUnit {
	p := new(TimeUnit)
	*p = x
	return p
}

func (x TimeUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_habit_v1_habit_proto_enumTypes[0].Descriptor()
}

func (TimeUnit) Type() protoreflect.EnumType {
	return &file_habit_v1_habit_proto_enumTypes[0]
}

func (x TimeUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeUnit.Descriptor instead.
func (TimeUnit) EnumDescriptor() ([]byte, []int) {
	return file_habit_v1_habit_proto_rawDescGZIP(), []int{0}
}

type Weekday int32

const (
	Weekday_WEEKDAY_UNSPECIFIED Weekday = 0
	Weekday_MONDAY              Weekday = 1
	Weekday_TUESDAY             Weekday = 2
	Weekday_WEDNESDAY           Weekday = 3
	Weekday_THURSDAY            Weekday = 4
	Weekday_FRIDAY              Weekday = 5
	Weekday_SATURDAY            Weekday = 6
	Weekday_SUNDAY              Weekday = 7
)

// Enum value maps for Weekday.
var (
	Weekday_name = map[int32]string{
		0: "WEEKDAY_UNSPECIFIED",
		1: "MONDAY",
		2: "TUESDAY",
		3: "WEDNESDAY",
		4: "THURSDAY",
		5: "FRIDAY",
		6: "SATURDAY",
		7: "SUNDAY",
	}
	Weekday_value = map[string]int32{
		"WEEKDAY_UNSPECIFIED": 0,
		"MONDAY":              1,
		"TUESDAY":             2,
		"WEDNESDAY":           3,
		"THURSDAY":            4,
		"FRIDAY":              5,
		"SATURDAY":            6,
		"SUNDAY":              7,
	}
)

func (x Weekday) Enum() *Weekday {
	p := new(Weekday)
	*p = x
	return p
}

func (x Weekday) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Weekday) Descriptor() protoreflect.EnumDescriptor {
	return file_habit_v1_habit_proto_enumTypes[1].Descriptor()
}

func (Weekday) Type() protoreflect.EnumType {
	return &file_habit_v1_habit_proto_enumTypes[1]
}

func (x Weekday) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Weekday.Descriptor instead.
func (Weekday) EnumDescriptor() ([]byte, []int) {
	return file_habit_v1_habit_proto_rawDescGZIP(), []int{1}
}

type Habit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Recurrence []*Recurrence          `protobuf:"bytes,4,rep,name=recurrence,proto3" json:"recurrence,omitempty"`
}

func (x *Habit) Reset() {
	*x = Habit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_habit_v1_habit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Habit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Habit) ProtoMessage() {}

func (x *Habit) ProtoReflect() protoreflect.Message {
	mi := &file_habit_v1_habit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Habit.ProtoReflect.Descriptor instead.
func (*Habit) Descriptor() ([]byte, []int) {
	return file_habit_v1_habit_proto_rawDescGZIP(), []int{0}
}

func (x *Habit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Habit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Habit) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Habit) GetRecurrence() []*Recurrence {
	if x != nil {
		return x.Recurrence
	}
	return nil
}

type CreateHabitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Recurrence []*Recurrence `protobuf:"bytes,2,rep,name=recurrence,proto3" json:"recurrence,omitempty"`
}

func (x *CreateHabitRequest) Reset() {
	*x = CreateHabitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_habit_v1_habit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHabitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHabitRequest) ProtoMessage() {}

func (x *CreateHabitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_habit_v1_habit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHabitRequest.ProtoReflect.Descriptor instead.
func (*CreateHabitRequest) Descriptor() ([]byte, []int) {
	return file_habit_v1_habit_proto_rawDescGZIP(), []int{1}
}

func (x *CreateHabitRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateHabitRequest) GetRecurrence() []*Recurrence {
	if x != nil {
		return x.Recurrence
	}
	return nil
}

type UpdateHabitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Recurrence []*Recurrence `protobuf:"bytes,3,rep,name=recurrence,proto3" json:"recurrence,omitempty"`
}

func (x *UpdateHabitRequest) Reset() {
	*x = UpdateHabitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_habit_v1_habit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHabitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHabitRequest) ProtoMessage() {}

func (x *UpdateHabitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_habit_v1_habit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHabitRequest.ProtoReflect.Descriptor instead.
func (*UpdateHabitRequest) Descriptor() ([]byte, []int) {
	return file_habit_v1_habit_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateHabitRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateHabitRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateHabitRequest) GetRecurrence() []*Recurrence {
	if x != nil {
		return x.Recurrence
	}
	return nil
}

// Intervals like "every 2 hours", "every 4 days"
type FixedInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Every uint32   `protobuf:"varint,1,opt,name=every,proto3" json:"every,omitempty"`
	Unit  TimeUnit `protobuf:"varint,2,opt,name=unit,proto3,enum=habit.v1.TimeUnit" json:"unit,omitempty"`
}

func (x *FixedInterval) Reset() {
	*x = FixedInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_habit_v1_habit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixedInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixedInterval) ProtoMessage() {}

func (x *FixedInterval) ProtoReflect() protoreflect.Message {
	mi := &file_habit_v1_habit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixedInterval.ProtoReflect.Descriptor instead.
func (*FixedInterval) Descriptor() ([]byte, []int) {
	return file_habit_v1_habit_proto_rawDescGZIP(), []int{3}
}

func (x *FixedInterval) GetEvery() uint32 {
	if x != nil {
		return x.Every
	}
	return 0
}

func (x *FixedInterval) GetUnit() TimeUnit {
	if x != nil {
		return x.Unit
	}
	return TimeUnit_TIME_UNIT_UNSPECIFIED
}

// Option to use weekdays too e.g. ["monday", "tuesday"]
type WeekdaySchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days []Weekday `protobuf:"varint,1,rep,packed,name=days,proto3,enum=habit.v1.Weekday" json:"days,omitempty"`
}

func (x *WeekdaySchedule) Reset() {
	*x = WeekdaySchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_habit_v1_habit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeekdaySchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeekdaySchedule) ProtoMessage() {}

func (x *WeekdaySchedule) ProtoReflect() protoreflect.Message {
	mi := &file_habit_v1_habit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeekdaySchedule.ProtoReflect.Descriptor instead.
func (*WeekdaySchedule) Descriptor() ([]byte, []int) {
	return file_habit_v1_habit_proto_rawDescGZIP(), []int{4}
}

func (x *WeekdaySchedule) GetDays() []Weekday {
	if x != nil {
		return x.Days
	}
	return nil
}

type Recurrence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Schedule:
	//
	//	*Recurrence_Fixed
	//	*Recurrence_Weekdays
	Schedule isRecurrence_Schedule `protobuf_oneof:"schedule"`
}

func (x *Recurrence) Reset() {
	*x = Recurrence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_habit_v1_habit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recurrence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recurrence) ProtoMessage() {}

func (x *Recurrence) ProtoReflect() protoreflect.Message {
	mi := &file_habit_v1_habit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recurrence.ProtoReflect.Descriptor instead.
func (*Recurrence) Descriptor() ([]byte, []int) {
	return file_habit_v1_habit_proto_rawDescGZIP(), []int{5}
}

func (m *Recurrence) GetSchedule() isRecurrence_Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (x *Recurrence) GetFixed() *FixedInterval {
	if x, ok := x.GetSchedule().(*Recurrence_Fixed); ok {
		return x.Fixed
	}
	return nil
}

func (x *Recurrence) GetWeekdays() *WeekdaySchedule {
	if x, ok := x.GetSchedule().(*Recurrence_Weekdays); ok {
		return x.Weekdays
	}
	return nil
}

type isRecurrence_Schedule interface {
	isRecurrence_Schedule()
}

type Recurrence_Fixed struct {
	Fixed *FixedInterval `protobuf:"bytes,1,opt,name=fixed,proto3,oneof"`
}

type Recurrence_Weekdays struct {
	Weekdays *WeekdaySchedule `protobuf:"bytes,2,opt,name=weekdays,proto3,oneof"`
}

func (*Recurrence_Fixed) isRecurrence_Schedule() {}

func (*Recurrence_Weekdays) isRecurrence_Schedule() {}

type DeleteHabitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteHabitRequest) Reset() {
	*x = DeleteHabitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_habit_v1_habit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHabitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHabitRequest) ProtoMessage() {}

func (x *DeleteHabitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_habit_v1_habit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHabitRequest.ProtoReflect.Descriptor instead.
func (*DeleteHabitRequest) Descriptor() ([]byte, []int) {
	return file_habit_v1_habit_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteHabitRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetHabitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetHabitsRequest) Reset() {
	*x = GetHabitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_habit_v1_habit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHabitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHabitsRequest) ProtoMessage() {}

func (x *GetHabitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_habit_v1_habit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHabitsRequest.ProtoReflect.Descriptor instead.
func (*GetHabitsRequest) Descriptor() ([]byte, []int) {
	return file_habit_v1_habit_proto_rawDescGZIP(), []int{7}
}

type GetHabitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Habits []*Habit `protobuf:"bytes,1,rep,name=habits,proto3" json:"habits,omitempty"`
}

func (x *GetHabitResponse) Reset() {
	*x = GetHabitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_habit_v1_habit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHabitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHabitResponse) ProtoMessage() {}

func (x *GetHabitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_habit_v1_habit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHabitResponse.ProtoReflect.Descriptor instead.
func (*GetHabitResponse) Descriptor() ([]byte, []int) {
	return file_habit_v1_habit_proto_rawDescGZIP(), []int{8}
}

func (x *GetHabitResponse) GetHabits() []*Habit {
	if x != nil {
		return x.Habits
	}
	return nil
}

var File_habit_v1_habit_proto protoreflect.FileDescriptor

var file_habit_v1_habit_proto_rawDesc = []byte{
	0x0a, 0x14, 0x68, 0x61, 0x62, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x61, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x68, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x76, 0x31,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c,
	0x01, 0x0a, 0x05, 0x48, 0x61, 0x62, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x61,
	0x62, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x5e, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x62, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x61,
	0x62, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x6e, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x62, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x61,
	0x62, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x4d, 0x0a,
	0x0d, 0x46, 0x69, 0x78, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x68, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x38, 0x0a, 0x0f,
	0x57, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x68, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79,
	0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x48, 0x00, 0x52,
	0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61,
	0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x61, 0x62, 0x69, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x08, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x73, 0x42,
	0x0a, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x61, 0x62, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x48, 0x61, 0x62, 0x69, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x48, 0x61, 0x62, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x68, 0x61, 0x62,
	0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x62, 0x69,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x62, 0x69, 0x74, 0x52, 0x06, 0x68, 0x61, 0x62, 0x69,
	0x74, 0x73, 0x2a, 0x52, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x19,
	0x0a, 0x15, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x49, 0x4e,
	0x55, 0x54, 0x45, 0x53, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x4f, 0x55, 0x52, 0x53, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x59, 0x53, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x57,
	0x45, 0x45, 0x4b, 0x53, 0x10, 0x04, 0x2a, 0x7e, 0x0a, 0x07, 0x57, 0x65, 0x65, 0x6b, 0x64, 0x61,
	0x79, 0x12, 0x17, 0x0a, 0x13, 0x57, 0x45, 0x45, 0x4b, 0x44, 0x41, 0x59, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f,
	0x4e, 0x44, 0x41, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x55, 0x45, 0x53, 0x44, 0x41,
	0x59, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x45, 0x44, 0x4e, 0x45, 0x53, 0x44, 0x41, 0x59,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x48, 0x55, 0x52, 0x53, 0x44, 0x41, 0x59, 0x10, 0x04,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x52, 0x49, 0x44, 0x41, 0x59, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08,
	0x53, 0x41, 0x54, 0x55, 0x52, 0x44, 0x41, 0x59, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x55,
	0x4e, 0x44, 0x41, 0x59, 0x10, 0x07, 0x32, 0x94, 0x02, 0x0a, 0x0c, 0x48, 0x61, 0x62, 0x69, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x48, 0x61, 0x62, 0x69, 0x74, 0x12, 0x1c, 0x2e, 0x68, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x62, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x68, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x61, 0x62, 0x69, 0x74, 0x12, 0x43, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x48, 0x61, 0x62, 0x69,
	0x74, 0x73, 0x12, 0x1a, 0x2e, 0x68, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x61, 0x62, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x68, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x61, 0x62,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x62, 0x69, 0x74, 0x12, 0x1c, 0x2e, 0x68, 0x61, 0x62, 0x69,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x62, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x68, 0x61, 0x62, 0x69, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x61, 0x62, 0x69, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x48, 0x61, 0x62, 0x69, 0x74, 0x12, 0x1c, 0x2e, 0x68, 0x61, 0x62, 0x69, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x61, 0x62, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x3a, 0x5a,
	0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x68, 0x75, 0x62,
	0x68, 0x69, 0x6b, 0x2f, 0x68, 0x61, 0x62, 0x69, 0x74, 0x2d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x68, 0x61, 0x62, 0x69, 0x74, 0x2f, 0x76,
	0x31, 0x3b, 0x68, 0x61, 0x62, 0x69, 0x74, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_habit_v1_habit_proto_rawDescOnce sync.Once
	file_habit_v1_habit_proto_rawDescData = file_habit_v1_habit_proto_rawDesc
)

func file_habit_v1_habit_proto_rawDescGZIP() []byte {
	file_habit_v1_habit_proto_rawDescOnce.Do(func() {
		file_habit_v1_habit_proto_rawDescData = protoimpl.X.CompressGZIP(file_habit_v1_habit_proto_rawDescData)
	})
	return file_habit_v1_habit_proto_rawDescData
}

var file_habit_v1_habit_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_habit_v1_habit_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_habit_v1_habit_proto_goTypes = []interface{}{
	(TimeUnit)(0),                 // 0: habit.v1.TimeUnit
	(Weekday)(0),                  // 1: habit.v1.Weekday
	(*Habit)(nil),                 // 2: habit.v1.Habit
	(*CreateHabitRequest)(nil),    // 3: habit.v1.CreateHabitRequest
	(*UpdateHabitRequest)(nil),    // 4: habit.v1.UpdateHabitRequest
	(*FixedInterval)(nil),         // 5: habit.v1.FixedInterval
	(*WeekdaySchedule)(nil),       // 6: habit.v1.WeekdaySchedule
	(*Recurrence)(nil),            // 7: habit.v1.Recurrence
	(*DeleteHabitRequest)(nil),    // 8: habit.v1.DeleteHabitRequest
	(*GetHabitsRequest)(nil),      // 9: habit.v1.GetHabitsRequest
	(*GetHabitResponse)(nil),      // 10: habit.v1.GetHabitResponse
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 12: google.protobuf.Empty
}
var file_habit_v1_habit_proto_depIdxs = []int32{
	11, // 0: habit.v1.Habit.created_at:type_name -> google.protobuf.Timestamp
	7,  // 1: habit.v1.Habit.recurrence:type_name -> habit.v1.Recurrence
	7,  // 2: habit.v1.CreateHabitRequest.recurrence:type_name -> habit.v1.Recurrence
	7,  // 3: habit.v1.UpdateHabitRequest.recurrence:type_name -> habit.v1.Recurrence
	0,  // 4: habit.v1.FixedInterval.unit:type_name -> habit.v1.TimeUnit
	1,  // 5: habit.v1.WeekdaySchedule.days:type_name -> habit.v1.Weekday
	5,  // 6: habit.v1.Recurrence.fixed:type_name -> habit.v1.FixedInterval
	6,  // 7: habit.v1.Recurrence.weekdays:type_name -> habit.v1.WeekdaySchedule
	2,  // 8: habit.v1.GetHabitResponse.habits:type_name -> habit.v1.Habit
	3,  // 9: habit.v1.HabitService.CreateHabit:input_type -> habit.v1.CreateHabitRequest
	9,  // 10: habit.v1.HabitService.GetHabits:input_type -> habit.v1.GetHabitsRequest
	4,  // 11: habit.v1.HabitService.UpdateHabit:input_type -> habit.v1.UpdateHabitRequest
	8,  // 12: habit.v1.HabitService.DeleteHabit:input_type -> habit.v1.DeleteHabitRequest
	2,  // 13: habit.v1.HabitService.CreateHabit:output_type -> habit.v1.Habit
	10, // 14: habit.v1.HabitService.GetHabits:output_type -> habit.v1.GetHabitResponse
	2,  // 15: habit.v1.HabitService.UpdateHabit:output_type -> habit.v1.Habit
	12, // 16: habit.v1.HabitService.DeleteHabit:output_type -> google.protobuf.Empty
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_habit_v1_habit_proto_init() }
func file_habit_v1_habit_proto_init() {
	if File_habit_v1_habit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_habit_v1_habit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Habit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_habit_v1_habit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHabitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_habit_v1_habit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHabitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_habit_v1_habit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixedInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_habit_v1_habit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeekdaySchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_habit_v1_habit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recurrence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_habit_v1_habit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHabitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_habit_v1_habit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHabitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_habit_v1_habit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHabitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_habit_v1_habit_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Recurrence_Fixed)(nil),
		(*Recurrence_Weekdays)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_habit_v1_habit_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_habit_v1_habit_proto_goTypes,
		DependencyIndexes: file_habit_v1_habit_proto_depIdxs,
		EnumInfos:         file_habit_v1_habit_proto_enumTypes,
		MessageInfos:      file_habit_v1_habit_proto_msgTypes,
	}.Build()
	File_habit_v1_habit_proto = out.File
	file_habit_v1_habit_proto_rawDesc = nil
	file_habit_v1_habit_proto_goTypes = nil
	file_habit_v1_habit_proto_depIdxs = nil
}
